$(document).ready(()=>{$(".slider").each((e,t)=>{var a=void 0,i=void 0,l=4e3;$(t).find(".slider-item").each((e,t)=>{if($(t).hasClass("active"))return a=e,i=e+1,!1;a=0,i=1}),$(t).attr("slider-interval")&&(l=$(t).attr("slider-interval"));var n=setInterval(()=>{c(i),i++},l);$(t).find(".slider-nav.prev").on("click",e=>{e.preventDefault(),clearTimeout(n),c(i=a-1),n=setInterval(()=>{c(i),i++},l)}),$(t).find(".slider-nav.next").on("click",e=>{e.preventDefault(),clearTimeout(n),c(i=a+1),n=setInterval(()=>{c(i),i++},l)}),$(t).find(".slider-dot").each((e,t)=>{$(t).on("click",e=>{e.preventDefault(),clearTimeout(n),c(i=$(t).attr("slider-indicator")),n=setInterval(()=>{c(i),i++},l)})});var r=$(t).find(".slider-item"),s=$(t).find(".slider-dot"),d=async(e,t="next")=>{"prev"==t?(e=>(r.each((t,i)=>{t==a&&$(i).addClass("right"),t==e&&$(i).addClass("prev")}),!0))(e)&&console.log("prev sliding function executed"):"next"==t&&(e=>(r.each((t,i)=>{t==a&&$(i).addClass("left"),t==e&&$(i).addClass("next")}),!0))(e)&&console.log("next sliding function executed"),await(e=>new Promise((t,i)=>{setTimeout(()=>{r.each((t,i)=>{t==a&&$(i).removeClass("left active right"),t==e&&($(i).removeClass("next prev"),$(i).addClass("active"))}),s.each((t,i)=>{t==a&&$(i).removeClass("active"),t==e&&$(i).addClass("active")}),t(!0)},600)}))(e)&&console.log("next sliding completed function executed"),a=e};function c(e){e>=r.length?i=0:e<0&&(i=r.length-1),(e=i)>a?d(e,"next"):e<a&&d(e,"prev")}})});


// Unminified
$(document).ready(() => {
    $(".slider").each((e, t) => {
        var a = void 0,
            i = void 0,
            l = 4e3;
        $(t)
            .find(".slider-item")
            .each((e, t) => {
                if ($(t).hasClass("active")) return (a = e), (i = e + 1), !1;
                (a = 0), (i = 1);
            }),
            $(t).attr("slider-interval") && (l = $(t).attr("slider-interval"));
        var n = setInterval(() => {
            c(i), i++;
        }, l);
        $(t)
            .find(".slider-nav.prev")
            .on("click", (e) => {
                e.preventDefault(),
                    clearTimeout(n),
                    c((i = a - 1)),
                    (n = setInterval(() => {
                        c(i), i++;
                    }, l));
            }),
            $(t)
                .find(".slider-nav.next")
                .on("click", (e) => {
                    e.preventDefault(),
                        clearTimeout(n),
                        c((i = a + 1)),
                        (n = setInterval(() => {
                            c(i), i++;
                        }, l));
                }),
            $(t)
                .find(".slider-dot")
                .each((e, t) => {
                    $(t).on("click", (e) => {
                        e.preventDefault(),
                            clearTimeout(n),
                            c((i = $(t).attr("slider-indicator"))),
                            (n = setInterval(() => {
                                c(i), i++;
                            }, l));
                    });
                });
        var r = $(t).find(".slider-item"),
            s = $(t).find(".slider-dot"),
            d = async (e, t = "next") => {
                "prev" == t
                    ? ((e) => (
                          r.each((t, i) => {
                              t == a && $(i).addClass("right"), t == e && $(i).addClass("prev");
                          }),
                          !0
                      ))(e) && console.log("prev sliding function executed")
                    : "next" == t &&
                      ((e) => (
                          r.each((t, i) => {
                              t == a && $(i).addClass("left"), t == e && $(i).addClass("next");
                          }),
                          !0
                      ))(e) &&
                      console.log("next sliding function executed"),
                    (await ((e) =>
                        new Promise((t, i) => {
                            setTimeout(() => {
                                r.each((t, i) => {
                                    t == a && $(i).removeClass("left active right"), t == e && ($(i).removeClass("next prev"), $(i).addClass("active"));
                                }),
                                    s.each((t, i) => {
                                        t == a && $(i).removeClass("active"), t == e && $(i).addClass("active");
                                    }),
                                    t(!0);
                            }, 600);
                        }))(e)) && console.log("next sliding completed function executed"),
                    (a = e);
            };
        function c(e) {
            e >= r.length ? (i = 0) : e < 0 && (i = r.length - 1), (e = i) > a ? d(e, "next") : e < a && d(e, "prev");
        }
    });
});
